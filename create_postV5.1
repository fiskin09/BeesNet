<?php
// Démarrage de la session pour vérifier l'authentification de l'utilisateur
session_start();
// Redirection vers la page de connexion si l'utilisateur n'est pas connecté
if (!isset($_SESSION['user_id'])) {
    header("Location: connexion.php");
    exit;
}

// Connexion à la base de données MySQL
$conn = new mysqli('localhost', 'root', '', 'beeznet');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Définition des messages de notification pour chaque thème de post
$notificationMessages = [
    'Nouvel emploi' => 'a commencé un nouvel emploi !',
    'Obtention de diplôme' => 'a obtenu un diplôme !',
    // D'autres thèmes de notification...
];

// Initialisation de la variable d'erreur
$error = '';
// Vérification si le formulaire a été soumis
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    // Récupération des données du formulaire
    $description = $conn->real_escape_string($_POST['description']);
    $theme = $conn->real_escape_string($_POST['theme']);
    $user_id = $_SESSION['user_id'];

    // Définition du répertoire de téléchargement des images
    $target_dir = "uploads/";
    if (!is_dir($target_dir)) {
        mkdir($target_dir, 0777, true);
    }

    // Téléchargement de l'image s'il y en a une
    $image = null;
    if (!empty($_FILES['image']['name'])) {
        $target_file = $target_dir . basename($_FILES['image']['name']);
        if (move_uploaded_file($_FILES['image']['tmp_name'], $target_file)) {
            $image = $target_file;
        } else {
            $error = "Désolé, une erreur s'est produite lors du téléchargement de votre fichier.";
        }
    }

    // Insertion du post dans la base de données
    if (empty($error)) {
        $stmt = $conn->prepare("INSERT INTO posts (user_id, description, image, theme) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("isss", $user_id, $description, $image, $theme);
        if ($stmt->execute()) {
            // Récupération du nom d'utilisateur de l'utilisateur actuel
            $stmt = $conn->prepare("SELECT username FROM Comptes WHERE id = ?");
            $stmt->bind_param("i", $user_id);
            $stmt->execute();
            $stmt->bind_result($username);
            $stmt->fetch();
            $stmt->close();

            // Création du message de notification
            $notification_msg = "$username " . $notificationMessages[$theme];

            // Récupération de la liste des amis
            $stmt = $conn->prepare("
                SELECT f.receiver_id AS friend_id FROM FriendRequests f WHERE f.sender_id = ? AND f.status = 'accepted'
                UNION
                SELECT f.sender_id AS friend_id FROM FriendRequests f WHERE f.receiver_id = ? AND f.status = 'accepted'
            ");
            $stmt->bind_param("ii", $user_id, $user_id);
            $stmt->execute();
            $friends_result = $stmt->get_result();

            // Enregistrement d'une notification pour chaque ami
            while ($friend = $friends_result->fetch_assoc()) {
                $friend_id = $friend['friend_id'];
                $stmt = $conn->prepare("INSERT INTO Notifications (user_id, message) VALUES (?, ?)");
                $stmt->bind_param("is", $friend_id, $notification_msg);
                $stmt->execute();
            }
            $stmt->close();

            // Redirection vers la page d'accueil après la création du post
            header("Location: index.php");
            exit;
        } else {
            $error = "Erreur lors de la création du post.";
        }
    }
}

// Fermeture de la connexion à la base de données
$conn->close();
?>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Créer un post</title>
    <!-- Inclusion de la police Roboto depuis Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <!-- Définition du style CSS -->
    <style>
        /* Style du corps de la page */
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #ffbd49;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        /* Style du conteneur principal */
        .container {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 100%;
        }
        /* Style du titre */
        h1 {
            text-align: center;
            color: #ffbd49;
        }
        /* Style du formulaire */
        form {
            display: flex;
            flex-direction: column;
        }
        /* Style des libellés */
        label {
            margin-top: 10px;
            color: #333;
        }
        /* Style des champs de texte, textarea et select */
        input[type="text"],
        textarea,
        select {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-top: 5px;
        }
        /* Style des champs de fichier (input type="file") */
        input[type="file"] {
            display: none;
        }
        /* Style personnalisé pour les selects */
        select {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            background-color: #fff;
            background-image: url('data:image/svg+xml;utf8,<svg fill="none" height="24" stroke="%23333" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><polyline points="6 9 12 15 18 9"/></svg>');
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 16px 16px;
        }
        /* Style du bouton de téléchargement de fichier personnalisé */
        .custom-file-upload {
            display: inline-block;
            padding: 10px 20px;
            cursor: pointer;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #ffbd49;
            color: #fff;
            font-size: 16px;
            text-align: center;
        }
        /* Style du bouton de soumission du formulaire */
        button {
            margin-top: 20px;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #ffbd49;
            color: #fff;
            font-size: 16px;
            cursor: pointer;
        }
        /* Style des messages d'erreur */
        .error {
            color: red;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <!-- Conteneur principal -->
    <div class="container">
        <!-- Titre de la page -->
        <h1>Créer un post</h1>
        <!-- Affichage du message d'erreur (le cas échéant) -->
        <?php if (!empty($error)): ?>
            <div class="error"><?php echo htmlspecialchars($error); ?></div>
        <?php endif; ?>
        <!-- Formulaire de création de post -->
        <form action="create_post.php" method="post" enctype="multipart/form-data">
            <!-- Champ de description du post -->
            <label for="description">Description</label>
            <textarea id="description" name="description" rows="4" required></textarea>
            <!-- Sélection du thème du post -->
            <label for="theme">Thème</label>
            <select id="theme" name="theme" required>
                <!-- Options de thèmes -->
                <option value="Nouvel emploi">Nouvel emploi</option>
                <option value="Obtention de diplôme">Obtention de diplôme</option>
                <option value="Nouveau CV">Nouveau CV</option>
                <option value="Promotion">Promotion</option>
                <option value="Nouvelle compétence">Nouvelle compétence</option>
                <option value="Anniversaire de travail">Anniversaire de travail</option>
                <option value="Projet terminé">Projet terminé</option>
                <option value="Conférence assistée">Conférence assistée</option>
                <option value="Nouvelle certification">Nouvelle certification</option>
                <option value="Publication">Publication</option>
                <option value="Voyage professionnel">Voyage professionnel</option>
                <option value="Nouveau partenariat">Nouveau partenariat</option>
                <option value="Mise à jour de profil">Mise à jour de profil</option>
                <option value="Webinaire">Webinaire</option>
                <option value="Autre">Autre</option>
            </select>
            <!-- Champ de téléchargement de fichier (image) personnalisé -->
            <label class="custom-file-upload">
                <input type="file" id="image" name="image">
                Choisir une image
            </label>
            <!-- Bouton de soumission du formulaire -->
            <button type="submit">Publier</button>
        </form>
    </div>
</body>
</html>
