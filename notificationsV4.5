<?php
session_start();
if (!isset($_SESSION['user_id'])) {
    header('Location: connexion.php');
    exit;
}

$conn = new mysqli('localhost', 'root', '', 'beeznet');
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$friendRequests = [];
$notifications = [];

// Accepter ou décliner une demande d'ami
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['action']) && isset($_POST['sender_id'])) {
    $action = $_POST['action'];
    $sender_id = $_POST['sender_id'];
    $receiver_id = $_SESSION['user_id'];

    // Préparation de la requête SQL en fonction de l'action
    if ($action == 'accept') {
        $stmt = $conn->prepare("UPDATE FriendRequests SET status = 'accepted' WHERE sender_id = ? AND receiver_id = ?");
        $notification_msg = "a accepté votre demande d'ami";
    } elseif ($action == 'decline') {
        $stmt = $conn->prepare("DELETE FROM FriendRequests WHERE sender_id = ? AND receiver_id = ?");
        $notification_msg = "a refusé votre demande d'ami";
    }
    $stmt->bind_param("ii", $sender_id, $receiver_id);
    $stmt->execute();
    $stmt->close();

    // Récupérer le nom d'utilisateur de l'utilisateur actuel (qui accepte ou refuse)
    $stmt = $conn->prepare("SELECT username FROM Comptes WHERE id = ?");
    $stmt->bind_param("i", $receiver_id);
    $stmt->execute();
    $stmt->bind_result($receiver_username);
    $stmt->fetch();
    $stmt->close();

    // Création du message de notification avec le nom de l'utilisateur actuel
    $notification_msg = "$receiver_username $notification_msg";
    
    // Enregistrer la notification pour l'expéditeur de la demande d'ami
    $stmt = $conn->prepare("INSERT INTO Notifications (user_id, message) VALUES (?, ?)");
    $stmt->bind_param("is", $sender_id, $notification_msg);
    $stmt->execute();
    $stmt->close();
}

// Envoi de message
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['message']) && isset($_POST['receiver_id'])) {
    $message = $_POST['message'];
    $sender_id = $_SESSION['user_id'];
    $receiver_id = $_POST['receiver_id'];
    
    // Enregistrer le message
    $stmt = $conn->prepare("INSERT INTO Messages (sender_id, receiver_id, message) VALUES (?, ?, ?)");
    $stmt->bind_param("iis", $sender_id, $receiver_id, $message);
    $stmt->execute();
    $stmt->close();

    // Enregistrer la notification pour le destinataire du message
    $stmt = $conn->prepare("SELECT username FROM Comptes WHERE id = ?");
    $stmt->bind_param("i", $sender_id);
    $stmt->execute();
    $stmt->bind_result($sender_username);
    $stmt->fetch();
    $stmt->close();

    $notification_msg = "$sender_username vous a envoyé un message";
    $stmt = $conn->prepare("INSERT INTO Notifications (user_id, message) VALUES (?, ?)");
    $stmt->bind_param("is", $receiver_id, $notification_msg);
    $stmt->execute();
    $stmt->close();
}

// Récupération des demandes d'amis reçues
$stmt = $conn->prepare("SELECT f.sender_id, c.username FROM FriendRequests f JOIN Comptes c ON f.sender_id = c.id WHERE f.receiver_id = ? AND f.status = 'pending'");
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();
while ($row = $result->fetch_assoc()) {
    $friendRequests[] = $row;
}
$stmt->close();

// Compter les demandes d'amis en attente
$stmt = $conn->prepare("SELECT COUNT(*) AS friend_request_count FROM FriendRequests WHERE receiver_id = ? AND status = 'pending'");
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();
$row = $result->fetch_assoc();
$friend_request_count = $row['friend_request_count'];
$stmt->close();

// Compter les messages non lus
$unread_messages_stmt = $conn->prepare("SELECT COUNT(*) as unread_messages FROM Messages WHERE receiver_id = ? AND is_read = FALSE");
$unread_messages_stmt->bind_param("i", $_SESSION['user_id']);
$unread_messages_stmt->execute();
$unread_messages_result = $unread_messages_stmt->get_result();
$unread_messages_count = $unread_messages_result->fetch_assoc()['unread_messages'];
$unread_messages_stmt->close();

// Récupération des notifications des posts et des likes des amis
$stmt = $conn->prepare("
    SELECT n.message, c.username AS sender_name, n.created_at
    FROM Notifications n
    JOIN Comptes c ON n.user_id = c.id
    WHERE n.user_id = ? AND n.is_read = FALSE
    UNION
    SELECT n.message, c.username AS sender_name, n.created_at
    FROM Notifications n
    JOIN Comptes c ON n.user_id = c.id
    JOIN FriendRequests f ON (f.sender_id = n.user_id OR f.receiver_id = n.user_id)
    WHERE (f.sender_id = ? OR f.receiver_id = ?) AND f.status = 'accepted' AND n.is_read = FALSE
    ORDER BY created_at DESC
");
$stmt->bind_param("iii", $_SESSION['user_id'], $_SESSION['user_id'], $_SESSION['user_id']);
$stmt->execute();
$result = $stmt->get_result();
while ($row = $result->fetch_assoc()) {
    $notifications[] = $row;
}
$stmt->close();

// Marquer les notifications comme lues
$stmt = $conn->prepare("UPDATE Notifications SET is_read = TRUE WHERE user_id = ?");
$stmt->bind_param("i", $_SESSION['user_id']);
$stmt->execute();
$stmt->close();

$conn->close();
?>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BeesNet - Notifications</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Lobster&family=Oswald:wght@200..700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: Oswald, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: #ffbd49;
        }
        header, section, footer, nav {
            background-color: #FFFFFF;
            color: #ffbd49;
            max-width: auto;
            margin: 0px auto;
            padding: 10px;
            background: #E5E7E9;
            text-align: center;
        }

        button.prev, button.next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: gray;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 24px;
            border-radius: 50%;
            transition: background-color 0.5s;
        }
        button.prev {
            left: 0;
        }
        button.next {
            right: 0;
        }
        button:hover {
            background-color: #E5E7E9;
        }
        h1, h2 {
            font-family: 'Lobster', sans-serif;
        }
        h1 {
            background-image: url('images/imageback.jpg');
            border-radius: 10px 10px 10px 10px; /* haut gauche, haut droit, bas droit, bas gauche */
            box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.25); /* Ombre modérément légère */
            background-size: 30%;
            background-position: center;
            background-repeat: repeat;
            color: black;
            height: auto;
            margin-top: 10px;
            margin-bottom: 10px;
        }

        p, li {
            color: #000000;
            list-style-type: none;
        }
nav {
    background-color: #ffbd49;
    color: black;
    text-align: center;
    padding: 7px 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
nav ul {
    list-style-type: none;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center; /* Center the navigation items */
    flex: 1; /* Allow it to take the remaining space */
}
nav ul li {
    margin-right: 20px;
    position: relative;
}
nav a {
    text-decoration: none;
    color: black;
    padding: 7px 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: color 0.3s;
}
nav a img {
    width: 24px;
    height: 24px;
    display: block;
    transition: opacity 0.3s;
}
nav a span {
    display: none;
    margin-top: 5px;
    transition: opacity 0.3s;
}
nav a:hover span {
    display: block;
}
nav a.active {
    font-size: 1.2em; /* Agrandir l'icône et le texte */
}
nav a.active img {
    width: 28px; /* Augmenter la taille de l'icône */
    height: 28px; /* Augmenter la taille de l'icône */
}
nav a.active span {
    display: block; /* Garder le texte toujours visible */
    opacity: 1; /* Rendre le texte complètement visible */
}
.logo {
    height: 85px; /* Ajustez la taille du logo selon vos besoins */
    width: 85px;
    margin-left: -20px;
}
.logo-container {
    display: flex;
    align-items: center;
    margin-left: 20px;
}
.logo-text {
    font-family: 'Lobster', sans-serif;
    margin-left: 10px; /* Espace entre le logo et le texte */
    font-size: 24px; /* Ajustez la taille du texte selon vos besoins */
}
        footer {
            background-color: #ffbd49;
            color: white;
            padding: 10px 0;
            text-align: center;
        }
        footer .footer-content {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
        }
        footer .footer-content div {
            flex: 1;
            padding: 10px;
            min-width: 200px;
        }
        footer a {
            color: black;
            text-decoration: none;
        }
        footer a:hover {
            text-decoration: underline;
        }
        .social-icons a {
            margin: 0 10px;
            color: black;
            font-size: 20px;
        }
        .event-highlight {
            font-size: 1.2em;
            font-weight: bold;
            color: #ffbd49;
            transition: all 0.3s ease;
        }
        .friend-request, .notification {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }
        .friend-request button {
            padding: 5px 10px;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }
        .accept-btn {
            background-color: #4CAF50;
            color: white;
        }
        .accept-btn:hover {
            background-color: #45a049;
        }
        .decline-btn {
            background-color: #f44336;
            color: white;
        }
        .decline-btn:hover {
            background-color: #da190b;
        }
        .notification-badge {
            display: inline-block; /* Assurez-vous que la pastille est toujours visible */
    position: absolute;
    top: -10px;
    right: -10px;
    background-color: red;
    color: white;
    border-radius: 50%;
    padding: 2px 6px;
    font-size: 12px;
    font-weight: bold;
}
.map-container iframe {
    width: 100%;
    max-width: 400px;
    height: 300px;
    border: 0;
    border-radius: 10%;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);

}

    </style>
</head>
<body>
    <!-- Barre de navigation -->
<nav>
    <div class="logo-container">
        <a href="index.php"><img src="images/logo.png" alt="Logo de l'entreprise" class="logo"></a>
        <span class="logo-text"><strong>BeesNet</strong></span>
    </div>
    <ul>
        <li><a href="index.php"><img src="images/home.png" alt="Accueil"><span>Accueil</span></a></li>
        <li><a href="reseau.php"><img src="images/network.png" alt="Mon Réseau"><span>Mon Réseau</span></a></li>
        <li><a href="profil.php"><img src="images/user.png" alt="Vous"><span>Vous</span></a></li>
        <li>
            <a href="notifications.php" class="active">
                <img src="images/notifications.png" alt="Notifications">
                <span>Notifications</span>
                <?php if ($friend_request_count > 0): ?>
                    <span class="notification-badge"><?php echo $friend_request_count; ?></span>
                <?php endif; ?>
            </a>
        </li>
                </li>
                <li>
            <a href="messagerie.php">
                <img src="images/messages.png" alt="Messagerie">
                <span>Messagerie</span>
                <?php if ($unread_messages_count > 0): ?>
                    <span class="notification-badge"><?php echo $unread_messages_count; ?></span>
                <?php endif; ?>
            </a>
        </li>
        <li><a href="emplois.php"><img src="images/jobs.png" alt="Emplois"><span>Emplois</span></a></li>
    </ul>
    <a href="connexion.php" style="float:right;"><img src="images/deco.png" alt="Déconnexion"><span>Déconnexion</span></a>
</nav>



    <!-- Section Introduction -->
    <header>
        <h1>Notifications</h1>
    </header>

    <!-- Section principale pour les notifications -->
    <section>
        <h2>Vos Notifications</h2>
        <!-- Contenu des demandes d'amis reçues -->
        <?php if (!empty($friendRequests)): ?>
            <ul>
                <?php foreach ($friendRequests as $request): ?>
                    <li class="friend-request">
                        <span><?php echo htmlspecialchars($request['username']); ?> vous a envoyé une demande d'ami.</span>
                        <div>
                            <form method="post" style="display: inline;">
                                <input type="hidden" name="sender_id" value="<?php echo $request['sender_id']; ?>">
                                <input type="hidden" name="action" value="accept">
                                <button type="submit" class="accept-btn">Accepter</button>
                            </form>
                            <form method="post" style="display: inline;">
                                <input type="hidden" name="sender_id" value="<?php echo $request['sender_id']; ?>">
                                <input type="hidden" name="action" value="decline">
                                <button type="submit" class="decline-btn">Décliner</button>
                            </form>
                        </div>
                    </li>
                <?php endforeach; ?>
            </ul>
        <?php else: ?>
            <p>Aucune demande d'ami pour le moment.</p>
        <?php endif; ?>

        <!-- Contenu des notifications -->
        <?php if (!empty($notifications)): ?>
            <ul>
                <?php foreach ($notifications as $notification): ?>
                    <li class="notification">
                        <span><?php echo htmlspecialchars($notification['sender_name']); ?> <?php echo htmlspecialchars($notification['message']); ?>.</span>
                    </li>
                <?php endforeach; ?>
            </ul>
        <?php else: ?>
            <p>Aucune notification pour le moment.</p>
        <?php endif; ?>
    </section>

    <footer>
        <div class="footer-content">
            <div class="contact-info">
                <h3>Contactez-nous</h3>
                <p>Email: <a href="mailto:info@ecein.com">info@ecein.com</a></p>
                <p>Téléphone: +33 1 23 45 67 89</p>
                <p>Adresse: 10 Rue de l'Exemple, 75001 Paris, France</p>
            </div>
            <div class="navigation-links">
                <h3>Liens Utiles</h3>
                <ul>
                    <li><a href="index.html">Accueil</a></li>
                    <li><a href="reseau.php">Mon Réseau</a></li>
                    <li><a href="vous.html">Vous</a></li>
                    <li><a href="notifications.html">Notifications</a></li>
                    <li><a href="messagerie.php">Messagerie</a></li>
                    <li><a href="emplois.html">Emplois</a></li>
                </ul>
            </div>
                <div class="map-container">
            <h3>Notre Localisation</h3>
            
            <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1702.348579769713!2d2.288825889794443!3d48.85095911333639!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47e6701b4f58251b%3A0x167f5a60fb94aa76!2sECE%20-%20Ecole%20d&#39;ing%C3%A9nieurs%20-%20Campus%20de%20Paris!5e0!3m2!1sfr!2sfr!4v1717342507157!5m2!1sfr!2sfr" 
            width="600" 
            height="450" 
            style="border:0;" 
            allowfullscreen="" 
            loading="lazy" 
            referrerpolicy="no-referrer-when-downgrade">
            </iframe>
            
        </div>
            <div class="social-icons">
                <h3>Suivez-nous</h3>
                <ul>
                    <li><a href="#">@BeesNetReal<i class="fa fa-facebook"></i></a></li>
                    <li><a href="#">@BeesNetOfficial<i class="fa fa-twitter"></i></a></li>
                    <li><a href="#">@BeesNetPro<i class="fa fa-linkedin"></i></a></li>
                    <li><a href="#">@TheBeesNet<i class="fa fa-instagram"></i></a></li>
                </ul>
            </div>
        </div>
        <p>&copy; 2024 BeesNet. Tous droits réservés.</p>
    </footer>
</body>
</html>
